# frozen_string_literal: true

require "spec_helper"

describe TimexDatalinkClient::Protocol1::Eeprom do
  let(:appointments) do
    [
      TimexDatalinkClient::Protocol1::Eeprom::Appointment.new(
        time: Time.new(1997, 9, 19),
        message: "release timexdl.exe"
      ),
      TimexDatalinkClient::Protocol1::Eeprom::Appointment.new(
        time: Time.new(2015, 10, 21),
        message: "get to the delorean"
      )
    ]
  end

  let(:anniversaries) do
    [
      TimexDatalinkClient::Protocol1::Eeprom::Anniversary.new(
        time: Time.new(1997, 9, 19),
        anniversary: "timexdl.exe modified date"
      ),
      TimexDatalinkClient::Protocol1::Eeprom::Anniversary.new(
        time: Time.new(2015, 10, 21),
        anniversary: "to the delorean"
      )
    ]
  end

  let(:phone_numbers) do
    [
      TimexDatalinkClient::Protocol1::Eeprom::PhoneNumber.new(
        name: "marty mcfly",
        number: "1234567890",
        type: "c",
      ),
      TimexDatalinkClient::Protocol1::Eeprom::PhoneNumber.new(
        name: "doc brown",
        number: "1112223333",
        type: "h",
      )
    ]
  end

  let(:lists) do
    [
      TimexDatalinkClient::Protocol1::Eeprom::List.new(
        list_entry: "muffler bearings",
        priority: nil
      ),
      TimexDatalinkClient::Protocol1::Eeprom::List.new(
        list_entry: "headlight fluid",
        priority: nil
      )
    ]
  end

  let(:appointment_notification) { 0xff }

  let(:eeprom) do
    described_class.new(
      appointments: appointments,
      anniversaries: anniversaries,
      phone_numbers: phone_numbers,
      lists: lists,
      appointment_notification: appointment_notification
    )
  end

  describe "#packets", :crc do
    subject(:packets) { eeprom.packets }

    it_behaves_like "CRC-wrapped packets", [
      [0x60, 0x06],
      [
        0x61, 0x01, 0x00, 0x0e, 0x00, 0x34, 0x00, 0x51, 0x00, 0x70, 0x02, 0x02, 0x02, 0x02, 0x61, 0xff, 0x13, 0x09,
        0x13, 0x00, 0x9b, 0x53, 0x39, 0x0a, 0xe7, 0x90, 0x9d, 0x64, 0x39
      ],
      [
        0x61, 0x02, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0xfc, 0x13, 0x0a, 0x15, 0x00, 0x90, 0xd3, 0x91, 0x1d, 0x46, 0x76,
        0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd, 0x0f, 0x00
      ],
      [
        0x61, 0x03, 0x96, 0xf7, 0x3c, 0x95, 0xb3, 0x91, 0x8b, 0xa3, 0x6c, 0xd2, 0x05, 0x71, 0x3f, 0x0e, 0x00, 0x91,
        0xa3, 0x34, 0x95, 0x04, 0x45, 0x1d, 0xf9, 0x54, 0x9e, 0xd4, 0xfc
      ],
      [
        0x61, 0x04, 0x10, 0x21, 0x43, 0x65, 0x87, 0x09, 0xaf, 0x96, 0xb2, 0x75, 0x22, 0x69, 0x31, 0x4f, 0x25, 0xfe,
        0x0f, 0x11, 0x21, 0x22, 0x33, 0x33, 0xcf, 0x0d, 0xc6, 0x90, 0xcb
      ],
      [
        0x61, 0x05, 0x86, 0x81, 0xd7, 0x0f, 0x17, 0x09, 0x13, 0x9d, 0x64, 0x39, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0x90,
        0x16, 0xd6, 0x48, 0x8f, 0xe4, 0x34, 0x64, 0xa3, 0x74, 0xce, 0x0f
      ],
      [0x61, 0x06, 0x0f, 0x0a, 0x15, 0x1d, 0x46, 0x76, 0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd],
      [0x62]
    ]

    context "with all data except appointments" do
      let(:appointments) { [] }

      it_behaves_like "CRC-wrapped packets", [
        [0x60, 0x05],
        [
          0x61, 0x01, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x2b, 0x00, 0x4a, 0x00, 0x02, 0x02, 0x02, 0x00, 0xff, 0x0f, 0x00,
          0x96, 0xf7, 0x3c, 0x95, 0xb3, 0x91, 0x8b, 0xa3, 0x6c, 0xd2, 0x05
        ],
        [
          0x61, 0x02, 0x71, 0x3f, 0x0e, 0x00, 0x91, 0xa3, 0x34, 0x95, 0x04, 0x45, 0x1d, 0xf9, 0x54, 0x9e, 0xd4, 0xfc,
          0x10, 0x21, 0x43, 0x65, 0x87, 0x09, 0xaf, 0x96, 0xb2, 0x75, 0x22
        ],
        [
          0x61, 0x03, 0x69, 0x31, 0x4f, 0x25, 0xfe, 0x0f, 0x11, 0x21, 0x22, 0x33, 0x33, 0xcf, 0x0d, 0xc6, 0x90, 0xcb,
          0x86, 0x81, 0xd7, 0x0f, 0x17, 0x09, 0x13, 0x9d, 0x64, 0x39, 0x61
        ],
        [
          0x61, 0x04, 0x53, 0xc9, 0x4e, 0xe8, 0x90, 0x16, 0xd6, 0x48, 0x8f, 0xe4, 0x34, 0x64, 0xa3, 0x74, 0xce, 0x0f,
          0x0f, 0x0a, 0x15, 0x1d, 0x46, 0x76, 0x91, 0x43, 0x36, 0x4e, 0x85
        ],
        [0x61, 0x05, 0x6d, 0x8e, 0x72, 0xfd],
        [0x62]
      ]
    end

    context "with all data except anniversaries" do
      let(:anniversaries) { [] }

      it_behaves_like "CRC-wrapped packets", [
        [0x60, 0x05],
        [
          0x61, 0x01, 0x00, 0x0e, 0x00, 0x34, 0x00, 0x51, 0x00, 0x70, 0x02, 0x02, 0x02, 0x00, 0x61, 0xff, 0x13, 0x09,
          0x13, 0x00, 0x9b, 0x53, 0x39, 0x0a, 0xe7, 0x90, 0x9d, 0x64, 0x39
        ],
        [
          0x61, 0x02, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0xfc, 0x13, 0x0a, 0x15, 0x00, 0x90, 0xd3, 0x91, 0x1d, 0x46, 0x76,
          0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd, 0x0f, 0x00
        ],
        [
          0x61, 0x03, 0x96, 0xf7, 0x3c, 0x95, 0xb3, 0x91, 0x8b, 0xa3, 0x6c, 0xd2, 0x05, 0x71, 0x3f, 0x0e, 0x00, 0x91,
          0xa3, 0x34, 0x95, 0x04, 0x45, 0x1d, 0xf9, 0x54, 0x9e, 0xd4, 0xfc
        ],
        [
          0x61, 0x04, 0x10, 0x21, 0x43, 0x65, 0x87, 0x09, 0xaf, 0x96, 0xb2, 0x75, 0x22, 0x69, 0x31, 0x4f, 0x25, 0xfe,
          0x0f, 0x11, 0x21, 0x22, 0x33, 0x33, 0xcf, 0x0d, 0xc6, 0x90, 0xcb
        ],
        [0x61, 0x05, 0x86, 0x81, 0xd7, 0x0f],
        [0x62]
      ]
    end

    context "with all data except phone numbers" do
      let(:phone_numbers) { [] }

      it_behaves_like "CRC-wrapped packets", [
        [0x60, 0x05],
        [
          0x61, 0x01, 0x00, 0x0e, 0x00, 0x34, 0x00, 0x51, 0x00, 0x51, 0x02, 0x02, 0x00, 0x02, 0x61, 0xff, 0x13, 0x09,
          0x13, 0x00, 0x9b, 0x53, 0x39, 0x0a, 0xe7, 0x90, 0x9d, 0x64, 0x39
        ],
        [
          0x61, 0x02, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0xfc, 0x13, 0x0a, 0x15, 0x00, 0x90, 0xd3, 0x91, 0x1d, 0x46, 0x76,
          0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd, 0x0f, 0x00
        ],
        [
          0x61, 0x03, 0x96, 0xf7, 0x3c, 0x95, 0xb3, 0x91, 0x8b, 0xa3, 0x6c, 0xd2, 0x05, 0x71, 0x3f, 0x0e, 0x00, 0x91,
          0xa3, 0x34, 0x95, 0x04, 0x45, 0x1d, 0xf9, 0x54, 0x9e, 0xd4, 0xfc
        ],
        [
          0x61, 0x04, 0x17, 0x09, 0x13, 0x9d, 0x64, 0x39, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0x90, 0x16, 0xd6, 0x48, 0x8f,
          0xe4, 0x34, 0x64, 0xa3, 0x74, 0xce, 0x0f, 0x0f, 0x0a, 0x15, 0x1d
        ],
        [0x61, 0x05, 0x46, 0x76, 0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd],
        [0x62]
      ]
    end

    context "with all data except lists" do
      let(:lists) { [] }

      it_behaves_like "CRC-wrapped packets", [
        [0x60, 0x05],
        [
          0x61, 0x01, 0x00, 0x0e, 0x00, 0x34, 0x00, 0x34, 0x00, 0x53, 0x02, 0x00, 0x02, 0x02, 0x61, 0xff, 0x13, 0x09,
          0x13, 0x00, 0x9b, 0x53, 0x39, 0x0a, 0xe7, 0x90, 0x9d, 0x64, 0x39
        ],
        [
          0x61, 0x02, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0xfc, 0x13, 0x0a, 0x15, 0x00, 0x90, 0xd3, 0x91, 0x1d, 0x46, 0x76,
          0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd, 0x10, 0x21
        ],
        [
          0x61, 0x03, 0x43, 0x65, 0x87, 0x09, 0xaf, 0x96, 0xb2, 0x75, 0x22, 0x69, 0x31, 0x4f, 0x25, 0xfe, 0x0f, 0x11,
          0x21, 0x22, 0x33, 0x33, 0xcf, 0x0d, 0xc6, 0x90, 0xcb, 0x86, 0x81
        ],
        [
          0x61, 0x04, 0xd7, 0x0f, 0x17, 0x09, 0x13, 0x9d, 0x64, 0x39, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0x90, 0x16, 0xd6,
          0x48, 0x8f, 0xe4, 0x34, 0x64, 0xa3, 0x74, 0xce, 0x0f, 0x0f, 0x0a
        ],
        [0x61, 0x05, 0x15, 0x1d, 0x46, 0x76, 0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd],
        [0x62]
      ]
    end

    context "with no data" do
      let(:appointments) { [] }
      let(:anniversaries) { [] }
      let(:phone_numbers) { [] }
      let(:lists) { [] }

      it_behaves_like "CRC-wrapped packets", [
        [0x60, 0x01],
        [0x61, 0x01, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff],
        [0x62]
      ]
    end

    context "when appointment_notification is 2" do
      let(:appointment_notification) { 2 }

      it_behaves_like "CRC-wrapped packets", [
        [0x60, 0x06],
        [
          0x61, 0x01, 0x00, 0x0e, 0x00, 0x34, 0x00, 0x51, 0x00, 0x70, 0x02, 0x02, 0x02, 0x02, 0x61, 0x02, 0x13, 0x09,
          0x13, 0x00, 0x9b, 0x53, 0x39, 0x0a, 0xe7, 0x90, 0x9d, 0x64, 0x39
        ],
        [
          0x61, 0x02, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0xfc, 0x13, 0x0a, 0x15, 0x00, 0x90, 0xd3, 0x91, 0x1d, 0x46, 0x76,
          0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd, 0x0f, 0x00
        ],
        [
          0x61, 0x03, 0x96, 0xf7, 0x3c, 0x95, 0xb3, 0x91, 0x8b, 0xa3, 0x6c, 0xd2, 0x05, 0x71, 0x3f, 0x0e, 0x00, 0x91,
          0xa3, 0x34, 0x95, 0x04, 0x45, 0x1d, 0xf9, 0x54, 0x9e, 0xd4, 0xfc
        ],
        [
          0x61, 0x04, 0x10, 0x21, 0x43, 0x65, 0x87, 0x09, 0xaf, 0x96, 0xb2, 0x75, 0x22, 0x69, 0x31, 0x4f, 0x25, 0xfe,
          0x0f, 0x11, 0x21, 0x22, 0x33, 0x33, 0xcf, 0x0d, 0xc6, 0x90, 0xcb
        ],
        [
          0x61, 0x05, 0x86, 0x81, 0xd7, 0x0f, 0x17, 0x09, 0x13, 0x9d, 0x64, 0x39, 0x61, 0x53, 0xc9, 0x4e, 0xe8, 0x90,
          0x16, 0xd6, 0x48, 0x8f, 0xe4, 0x34, 0x64, 0xa3, 0x74, 0xce, 0x0f
        ],
        [0x61, 0x06, 0x0f, 0x0a, 0x15, 0x1d, 0x46, 0x76, 0x91, 0x43, 0x36, 0x4e, 0x85, 0x6d, 0x8e, 0x72, 0xfd],
        [0x62]
      ]
    end
  end
end
