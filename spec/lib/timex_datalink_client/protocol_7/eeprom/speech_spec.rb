# frozen_string_literal: true

require "spec_helper"

describe TimexDatalinkClient::Protocol7::Eeprom::Speech do
  let(:device_nickname) { [] }
  let(:user_nickname) { [] }
  let(:phrases) { [] }

  let(:speech) do
    described_class.new(
      device_nickname: device_nickname,
      user_nickname: user_nickname,
      phrases: phrases
    )
  end

  describe "#packets" do
    subject(:packets) { speech.packets }

    it do
      should eq [
        0x0b, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x24, 0x00, 0x2e, 0x00, 0x38, 0x00, 0x47, 0x00, 0x56, 0x00, 0x60, 0x00,
        0x6a, 0x00, 0x6f, 0x00, 0x79, 0x00, 0x83, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x8d, 0xfe, 0x00, 0x00,
        0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x7b, 0xfe, 0x00, 0x00, 0xf0, 0xfb, 0x63, 0x39, 0x3c, 0xc0, 0xfe, 0x00,
        0x00, 0x00, 0xf0, 0xfb, 0x61, 0x39, 0x3c, 0x70, 0x94, 0xfd, 0x4b, 0x03, 0x7c, 0x44, 0x27, 0xfe, 0x00, 0xd3,
        0xfb, 0xae, 0x30, 0x29, 0x33, 0x3c, 0xfb, 0x30, 0x20, 0x07, 0x3c, 0x39, 0x24, 0xfe, 0xf1, 0xfb, 0x53, 0x03,
        0xae, 0x9c, 0xe6, 0x8e, 0xfe, 0x00, 0xc1, 0x61, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0xff, 0xfb,
        0x61, 0x3e, 0xfe, 0x41, 0xcb, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0x37, 0x39, 0x5a, 0xae, 0xfd,
        0x1f, 0x4b, 0x8e, 0x81, 0xfe, 0x3f, 0x39, 0x5a, 0x1c, 0x81, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x05
      ]
    end

    context "when device_nickname is [0xb1]" do
      let(:device_nickname) { [0xb1] }

      it do
        should eq [
          0x0f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x2c, 0x00, 0x36, 0x00, 0x40, 0x00, 0x4f, 0x00, 0x5e, 0x00, 0x68, 0x00,
          0x72, 0x00, 0x77, 0x00, 0x81, 0x00, 0x8b, 0x00, 0x95, 0x00, 0xa4, 0x00, 0xa9, 0x00, 0xb3, 0x00, 0x3c, 0xb1,
          0x53, 0xfd, 0x4d, 0x2c, 0x03, 0x8d, 0xfe, 0x00, 0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x2c, 0x03, 0x7b, 0xfe, 0x00,
          0xf0, 0xfb, 0x63, 0x39, 0x3c, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0xf0, 0xfb, 0x61, 0x39, 0x3c, 0x70, 0x94, 0xfd,
          0x4b, 0x03, 0x7c, 0x44, 0x27, 0xfe, 0x00, 0xd3, 0xfb, 0xae, 0x30, 0x29, 0x33, 0x3c, 0xfb, 0x30, 0x20, 0x07,
          0x3c, 0x39, 0x24, 0xfe, 0xf1, 0xfb, 0x53, 0x03, 0xae, 0x9c, 0xe6, 0x8e, 0xfe, 0x00, 0xc1, 0x61, 0x39, 0x3c,
          0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0xff, 0xfb, 0x61, 0x3e, 0xfe, 0x41, 0xcb, 0x39, 0x3c, 0x44, 0xcc, 0xfd,
          0x4b, 0xfe, 0x00, 0x37, 0x39, 0x5a, 0xae, 0xfd, 0x1f, 0x4b, 0x8e, 0x81, 0xfe, 0x3f, 0x39, 0x5a, 0x1c, 0x81,
          0xc0, 0xfe, 0x00, 0x00, 0x00, 0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x20, 0x03, 0x8d, 0x7b, 0x94, 0xc0, 0xfe, 0x00,
          0x00, 0x00, 0x17, 0xb1, 0xe0, 0xab, 0xfe, 0x2c, 0xb1, 0x53, 0xfd, 0x4d, 0x70, 0x82, 0xfe, 0x00, 0x00, 0x3c,
          0xb1, 0x53, 0xfd, 0x4d, 0x37, 0x03, 0x57, 0x0c, 0xfd, 0x30, 0x4d, 0xff, 0x00, 0x00, 0x05
        ]
      end
    end

    context "when device_nickname is [0xb1, 0xb1, 0xb1, 0xb1, 0xb1]" do
      let(:device_nickname) { [0xb1, 0xb1, 0xb1, 0xb1, 0xb1] }

      it do
        should eq [
          0x0f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x31, 0x00, 0x40, 0x00, 0x4a, 0x00, 0x59, 0x00, 0x68, 0x00, 0x72, 0x00,
          0x7c, 0x00, 0x81, 0x00, 0x8b, 0x00, 0x95, 0x00, 0x9f, 0x00, 0xb3, 0x00, 0xbd, 0x00, 0xcc, 0x00, 0x00, 0xb1,
          0xb1, 0xb1, 0xb1, 0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x2c, 0x03, 0x8d, 0xfe, 0x00, 0x00, 0xb1, 0xb1, 0xb1, 0xb1,
          0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x2c, 0x03, 0x7b, 0xfe, 0x00, 0xf0, 0xfb, 0x63, 0x39, 0x3c, 0xc0, 0xfe, 0x00,
          0x00, 0x00, 0xf0, 0xfb, 0x61, 0x39, 0x3c, 0x70, 0x94, 0xfd, 0x4b, 0x03, 0x7c, 0x44, 0x27, 0xfe, 0x00, 0xd3,
          0xfb, 0xae, 0x30, 0x29, 0x33, 0x3c, 0xfb, 0x30, 0x20, 0x07, 0x3c, 0x39, 0x24, 0xfe, 0xf1, 0xfb, 0x53, 0x03,
          0xae, 0x9c, 0xe6, 0x8e, 0xfe, 0x00, 0xc1, 0x61, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0xff, 0xfb,
          0x61, 0x3e, 0xfe, 0x41, 0xcb, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0x37, 0x39, 0x5a, 0xae, 0xfd,
          0x1f, 0x4b, 0x8e, 0x81, 0xfe, 0x3f, 0x39, 0x5a, 0x1c, 0x81, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xb1,
          0xb1, 0xb1, 0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x20, 0x03, 0x8d, 0x7b, 0x94, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00,
          0xb1, 0xb1, 0xb1, 0xb1, 0x17, 0xb1, 0xe0, 0xab, 0xfe, 0x00, 0xb1, 0xb1, 0xb1, 0xb1, 0x2c, 0xb1, 0x53, 0xfd,
          0x4d, 0x70, 0x82, 0xfe, 0x00, 0x00, 0x00, 0xb1, 0xb1, 0xb1, 0xb1, 0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x37, 0x03,
          0x57, 0x0c, 0xfd, 0x30, 0x4d, 0xff, 0x00, 0x00, 0x05
        ]
      end
    end

    context "when user_nickname is [0xb2]" do
      let(:user_nickname) { [0xb2] }

      it do
        should eq [
          0x0b, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x24, 0x00, 0x2e, 0x00, 0x38, 0x00, 0x47, 0x00, 0x5b, 0x00, 0x65, 0x00,
          0x6f, 0x00, 0x79, 0x00, 0x83, 0x00, 0x92, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x8d, 0xfe, 0x00, 0x00,
          0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x7b, 0xfe, 0x00, 0x00, 0x3c, 0xb2, 0xfb, 0x63, 0x39, 0x30, 0x3c, 0xfe,
          0x00, 0x00, 0x3c, 0xb2, 0xfb, 0x61, 0x39, 0x1c, 0x3c, 0x94, 0xfd, 0x4b, 0x1f, 0x03, 0x44, 0x27, 0xfe, 0x34,
          0xb2, 0xfb, 0xae, 0x30, 0xcc, 0x29, 0x3c, 0xfb, 0x30, 0xc1, 0x20, 0x3c, 0x39, 0x24, 0xc0, 0xfe, 0x00, 0x00,
          0x00, 0x3c, 0xb2, 0xfb, 0x53, 0x03, 0x67, 0xae, 0xe6, 0x8e, 0xfe, 0x30, 0xb2, 0x61, 0x39, 0x3c, 0x73, 0x44,
          0xfd, 0x4b, 0xfe, 0x3f, 0xb2, 0xfb, 0x61, 0x3e, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x10, 0xb2, 0xcb, 0x39, 0x3c,
          0x73, 0x44, 0xfd, 0x4b, 0xfe, 0x0d, 0xb2, 0x39, 0x5a, 0xae, 0xc7, 0xfd, 0x4b, 0x8e, 0x81, 0xc0, 0xfe, 0x00,
          0x00, 0x00, 0x0f, 0xb2, 0x39, 0x5a, 0x1c, 0xf0, 0x81, 0xff, 0x00, 0x00, 0x05
        ]
      end
    end

    context "when user_nickname is [0xb2, 0xb2, 0xb2, 0xb2, 0xb2]" do
      let(:user_nickname) { [0xb2, 0xb2, 0xb2, 0xb2, 0xb2] }

      it do
        should eq [
          0x0b, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x24, 0x00, 0x2e, 0x00, 0x3d, 0x00, 0x51, 0x00, 0x6a, 0x00, 0x79, 0x00,
          0x88, 0x00, 0x97, 0x00, 0xa6, 0x00, 0xba, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x8d, 0xfe, 0x00, 0x00,
          0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x7b, 0xfe, 0x00, 0x00, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x3c, 0xb2, 0xfb,
          0x63, 0x39, 0x30, 0x3c, 0xfe, 0x00, 0x00, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x3c, 0xb2, 0xfb, 0x61, 0x39, 0x1c,
          0x3c, 0x94, 0xfd, 0x4b, 0x1f, 0x03, 0x44, 0x27, 0xfe, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x34, 0xb2, 0xfb, 0xae,
          0x30, 0xcc, 0x29, 0x3c, 0xfb, 0x30, 0xc1, 0x20, 0x3c, 0x39, 0x24, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xb2,
          0xb2, 0xb2, 0xb2, 0x3c, 0xb2, 0xfb, 0x53, 0x03, 0x67, 0xae, 0xe6, 0x8e, 0xfe, 0x00, 0xb2, 0xb2, 0xb2, 0xb2,
          0x30, 0xb2, 0x61, 0x39, 0x3c, 0x73, 0x44, 0xfd, 0x4b, 0xfe, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x3f, 0xb2, 0xfb,
          0x61, 0x3e, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x10, 0xb2, 0xcb, 0x39, 0x3c, 0x73,
          0x44, 0xfd, 0x4b, 0xfe, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x0d, 0xb2, 0x39, 0x5a, 0xae, 0xc7, 0xfd, 0x4b, 0x8e,
          0x81, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x0f, 0xb2, 0x39, 0x5a, 0x1c, 0xf0, 0x81,
          0xff, 0x00, 0x00, 0x05
        ]
      end
    end

    context "when phrases is [[0xb3]]" do
      let(:phrases) { [[0xb3]] }

      it do
        should eq [
          0x0c, 0x00, 0x1a, 0x00, 0x1c, 0x00, 0x26, 0x00, 0x30, 0x00, 0x3a, 0x00, 0x49, 0x00, 0x58, 0x00, 0x62, 0x00,
          0x6c, 0x00, 0x71, 0x00, 0x7b, 0x00, 0x85, 0x00, 0x8f, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x8d, 0xfe,
          0x00, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x7b, 0xfe, 0x00, 0x00, 0xf0, 0xfb, 0x63, 0x39, 0x3c, 0xc0,
          0xfe, 0x00, 0x00, 0x00, 0xf0, 0xfb, 0x61, 0x39, 0x3c, 0x70, 0x94, 0xfd, 0x4b, 0x03, 0x7c, 0x44, 0x27, 0xfe,
          0x00, 0xd3, 0xfb, 0xae, 0x30, 0x29, 0x33, 0x3c, 0xfb, 0x30, 0x20, 0x07, 0x3c, 0x39, 0x24, 0xfe, 0xf1, 0xfb,
          0x53, 0x03, 0xae, 0x9c, 0xe6, 0x8e, 0xfe, 0x00, 0xc1, 0x61, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00,
          0xff, 0xfb, 0x61, 0x3e, 0xfe, 0x41, 0xcb, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0x37, 0x39, 0x5a,
          0xae, 0xfd, 0x1f, 0x4b, 0x8e, 0x81, 0xfe, 0x3f, 0x39, 0x5a, 0x1c, 0x81, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x30,
          0xb3, 0xff, 0x00, 0x00, 0x05
        ]
      end
    end

    context "when phrases is [[0xb3, 0xb3, 0xb3, 0xb3, 0xb3]]" do
      let(:phrases) { [[0xb3, 0xb3, 0xb3, 0xb3, 0xb3]] }

      it do
        should eq [
          0x0c, 0x00, 0x1a, 0x00, 0x1c, 0x00, 0x26, 0x00, 0x30, 0x00, 0x3a, 0x00, 0x49, 0x00, 0x58, 0x00, 0x62, 0x00,
          0x6c, 0x00, 0x71, 0x00, 0x7b, 0x00, 0x85, 0x00, 0x8f, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x8d, 0xfe,
          0x00, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x7b, 0xfe, 0x00, 0x00, 0xf0, 0xfb, 0x63, 0x39, 0x3c, 0xc0,
          0xfe, 0x00, 0x00, 0x00, 0xf0, 0xfb, 0x61, 0x39, 0x3c, 0x70, 0x94, 0xfd, 0x4b, 0x03, 0x7c, 0x44, 0x27, 0xfe,
          0x00, 0xd3, 0xfb, 0xae, 0x30, 0x29, 0x33, 0x3c, 0xfb, 0x30, 0x20, 0x07, 0x3c, 0x39, 0x24, 0xfe, 0xf1, 0xfb,
          0x53, 0x03, 0xae, 0x9c, 0xe6, 0x8e, 0xfe, 0x00, 0xc1, 0x61, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00,
          0xff, 0xfb, 0x61, 0x3e, 0xfe, 0x41, 0xcb, 0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0x37, 0x39, 0x5a,
          0xae, 0xfd, 0x1f, 0x4b, 0x8e, 0x81, 0xfe, 0x3f, 0x39, 0x5a, 0x1c, 0x81, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00,
          0xb3, 0xb3, 0xb3, 0xb3, 0x30, 0xb3, 0xff, 0x00, 0x00, 0x05
        ]
      end
    end

    context "when phrases is [[0xb3], [0xb3], [0xb3], [0xb3], [0xb3]]" do
      let(:phrases) { [[0xb3], [0xb3], [0xb3], [0xb3], [0xb3]] }

      it do
        should eq [
          0x10, 0x00, 0x1a, 0x00, 0x24, 0x00, 0x2e, 0x00, 0x38, 0x00, 0x42, 0x00, 0x51, 0x00, 0x60, 0x00, 0x6a, 0x00,
          0x74, 0x00, 0x79, 0x00, 0x83, 0x00, 0x8d, 0x00, 0x97, 0x00, 0x9c, 0x00, 0xa1, 0x00, 0xa6, 0x00, 0xab, 0x00,
          0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x8d, 0xfe, 0x00, 0x00, 0xf0, 0x53, 0xfd, 0x4d, 0x03, 0xb0, 0x7b, 0xfe,
          0x00, 0x00, 0xf0, 0xfb, 0x63, 0x39, 0x3c, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0xf0, 0xfb, 0x61, 0x39, 0x3c, 0x70,
          0x94, 0xfd, 0x4b, 0x03, 0x7c, 0x44, 0x27, 0xfe, 0x00, 0xd3, 0xfb, 0xae, 0x30, 0x29, 0x33, 0x3c, 0xfb, 0x30,
          0x20, 0x07, 0x3c, 0x39, 0x24, 0xfe, 0xf1, 0xfb, 0x53, 0x03, 0xae, 0x9c, 0xe6, 0x8e, 0xfe, 0x00, 0xc1, 0x61,
          0x39, 0x3c, 0x44, 0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0xff, 0xfb, 0x61, 0x3e, 0xfe, 0x41, 0xcb, 0x39, 0x3c, 0x44,
          0xcc, 0xfd, 0x4b, 0xfe, 0x00, 0x37, 0x39, 0x5a, 0xae, 0xfd, 0x1f, 0x4b, 0x8e, 0x81, 0xfe, 0x3f, 0x39, 0x5a,
          0x1c, 0x81, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x30, 0xb3, 0xfe, 0x00, 0x00, 0x30, 0xb3, 0xfe, 0x00, 0x00, 0x30,
          0xb3, 0xfe, 0x00, 0x00, 0x30, 0xb3, 0xfe, 0x00, 0x00, 0x30, 0xb3, 0xff, 0x00, 0x00, 0x05
        ]
      end
    end

    context "when device_nickname, user_nickname, and phrases are present" do
      let(:device_nickname) { [0xb1, 0xb1, 0xb1, 0xb1, 0xb1] }
      let(:user_nickname) { [0xb2, 0xb2, 0xb2, 0xb2, 0xb2] }
      let(:phrases) { [[0xb3], [0xb3], [0xb3], [0xb3], [0xb3]] }

      it do
        should eq [
          0x14, 0x00, 0x22, 0x00, 0x2c, 0x00, 0x3b, 0x00, 0x4a, 0x00, 0x59, 0x00, 0x6d, 0x00, 0x86, 0x00, 0x95, 0x00,
          0xa4, 0x00, 0xb3, 0x00, 0xc2, 0x00, 0xd6, 0x00, 0xe5, 0x00, 0xf9, 0x00, 0x03, 0x01, 0x12, 0x01, 0x26, 0x01,
          0x2b, 0x01, 0x30, 0x01, 0x35, 0x01, 0x3a, 0x01, 0x00, 0xb1, 0xb1, 0xb1, 0xb1, 0x3c, 0xb1, 0x53, 0xfd, 0x4d,
          0x2c, 0x03, 0x8d, 0xfe, 0x00, 0x00, 0xb1, 0xb1, 0xb1, 0xb1, 0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x2c, 0x03, 0x7b,
          0xfe, 0x00, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x3c, 0xb2, 0xfb, 0x63, 0x39, 0x30, 0x3c, 0xfe, 0x00, 0x00, 0x00,
          0xb2, 0xb2, 0xb2, 0xb2, 0x3c, 0xb2, 0xfb, 0x61, 0x39, 0x1c, 0x3c, 0x94, 0xfd, 0x4b, 0x1f, 0x03, 0x44, 0x27,
          0xfe, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x34, 0xb2, 0xfb, 0xae, 0x30, 0xcc, 0x29, 0x3c, 0xfb, 0x30, 0xc1, 0x20,
          0x3c, 0x39, 0x24, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x3c, 0xb2, 0xfb, 0x53, 0x03,
          0x67, 0xae, 0xe6, 0x8e, 0xfe, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x30, 0xb2, 0x61, 0x39, 0x3c, 0x73, 0x44, 0xfd,
          0x4b, 0xfe, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0x3f, 0xb2, 0xfb, 0x61, 0x3e, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00,
          0xb2, 0xb2, 0xb2, 0xb2, 0x10, 0xb2, 0xcb, 0x39, 0x3c, 0x73, 0x44, 0xfd, 0x4b, 0xfe, 0x00, 0xb2, 0xb2, 0xb2,
          0xb2, 0x0d, 0xb2, 0x39, 0x5a, 0xae, 0xc7, 0xfd, 0x4b, 0x8e, 0x81, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xb2,
          0xb2, 0xb2, 0xb2, 0x0f, 0xb2, 0x39, 0x5a, 0x1c, 0xf0, 0x81, 0xfe, 0x00, 0x00, 0x00, 0xb1, 0xb1, 0xb1, 0xb1,
          0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x20, 0x03, 0x8d, 0x7b, 0x94, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xb1, 0xb1,
          0xb1, 0xb1, 0x17, 0xb1, 0xe0, 0xab, 0xfe, 0x00, 0xb1, 0xb1, 0xb1, 0xb1, 0x2c, 0xb1, 0x53, 0xfd, 0x4d, 0x70,
          0x82, 0xfe, 0x00, 0x00, 0x00, 0xb1, 0xb1, 0xb1, 0xb1, 0x3c, 0xb1, 0x53, 0xfd, 0x4d, 0x37, 0x03, 0x57, 0x0c,
          0xfd, 0x30, 0x4d, 0xff, 0x00, 0x00, 0x30, 0xb3, 0xfe, 0x00, 0x00, 0x30, 0xb3, 0xfe, 0x00, 0x00, 0x30, 0xb3,
          0xfe, 0x00, 0x00, 0x30, 0xb3, 0xfe, 0x00, 0x00, 0x30, 0xb3, 0xff, 0x00, 0x00, 0x05
        ]
      end
    end
  end
end
